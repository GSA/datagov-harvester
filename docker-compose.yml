services:
  nginx-harvest-source:
    image: nginx
    volumes:
      - ./example_data:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "${HARVEST_SOURCE_PORT}:80"
  db:
      restart: always
      image: postgis/postgis:latest
      env_file:
        - .env
      environment:
        PGPORT: ${DATABASE_PORT}
        POSTGRES_USER: ${DATABASE_USER}
        POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
        POSTGRES_DB: ${DATABASE_NAME}
      ports:
        - "${DATABASE_PORT}:5432"
      volumes:
        - postgres_data:/var/lib/postgresql/data
      healthcheck:
        test: ["CMD-SHELL", "pg_isready"]
        interval: 5s
        timeout: 5s
        retries: 5
  transformer:
      image: ghcr.io/gsa/mdtranslator:latest
      restart: always
      env_file:
        - .env
      environment:
        MDTRANSLATOR_PORT: ${MDTRANSLATOR_PORT}
        MDTRANSLATOR_URL: ${MDTRANSLATOR_URL}
      ports:
        - "${MDTRANSLATOR_PORT}:3000"
      healthcheck:
        test: "curl -I -X POST http://localhost:3000/translates | grep 422"
        interval: 5s
        timeout: 5s
        retries: 5
  app:
    build: .
    depends_on:
      db:
        condition: service_healthy
      transformer:
        condition: service_healthy
    volumes:
      - .:/app
    environment:
      DATABASE_URI: postgresql+psycopg://${DATABASE_USER}:${DATABASE_PASSWORD}@db:${DATABASE_PORT}/${DATABASE_NAME}
      CF_SERVICE_USER: ${CF_SERVICE_USER}
      CF_SERVICE_AUTH: ${CF_SERVICE_AUTH}
      FLASK_APP: run.py
      FLASK_ENV: development
    ports:
      - "8080:8080"
    command:
      - /bin/sh
      - -c
      - |
        flask db upgrade
        flask run --host=0.0.0.0 --port=8080 --reload

volumes:
  postgres_data:
